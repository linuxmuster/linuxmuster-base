#!/bin/bash
# setup for Linux-Musterloesung
#
# Thomas Schmitt <tschmitt@linuxmuster.de>
# GPL-2
#
# $Id: linuxmuster-setup 1334 2012-07-20 12:03:39Z tschmitt $
#

# check debian version
#if ! grep -q 5\.0\.[1-9] /etc/debian_version; then
#	echo "This is not Debian 5.0.x Lenny. Please upgrade your system!"
#	exit 1
#fi

# read dist.conf
. /usr/share/linuxmuster/config/dist.conf || exit 1

# source helperfunctions
. $HELPERFUNCTIONS || exit 1

# parsing parameters
opt=$1

usage() {
  echo
  echo "Usage: linuxmuster-setup <--first|--modify>"
  echo
  echo "--first : Call to do a fresh configuration. Use with caution."
  echo "          You will lose all your user data!"
  echo
  echo "--modify: Call to modify your server configuration"
  echo
  exit 1
}

[[ "$opt" = "--first" || "$opt" = "--modify" ]] || usage

# warning
echo
echo "You have called $0 with parameter $opt."
[ "$opt" = "--first" ] && echo "Doing a fresh installation. You will lose all your user and workstation data!"
[ "$opt" = "--modify" ] && echo "Modified configuration files will be backed up to $BACKUPDIR!"
echo "The process will start in 5 seconds. Press CRTL-C to cancel."
n=0
while [ $n -lt 5 ]; do
  echo -n .
  sleep 1
  let n=n+1
done
echo
echo "Let's go! :-)"
echo

# logfile
logfile=$LOGDIR/setup.log
echo >> $logfile
chmod 600 $logfile
echo "####################################################" >> $logfile
echo "Setup session started at `date`" >> $logfile
date >> $logfile
echo "####################################################" >> $logfile

echo "Logging output to $logfile ..."
echo

# reconfiguring package to have all templates
dpkg-reconfigure linuxmuster-base | tee -a $logfile

# calling as base-config late command
case $opt in

  --first)

    # renew complete apt configuration
    echo "Resetting apt configuration." | tee -a $logfile
    cp -a $STATICTPLDIR/etc/apt/* /etc/apt | tee -a $logfile
    
    # correct vboxadd
    id vboxadd &> /dev/null && userdel vboxadd
    adduser --ingroup daemon --gecos "VirtualBox guest additions user" --system --home /var/run/vboxadd --shell /bin/false vboxadd
    mkdir -p /var/run/vboxadd
    chown vboxadd:daemon /var/run/vboxadd

    # add cyrus user
    id cyrus &> /dev/null || adduser --gecos "Cyrus Mailsystem User" --home /var/spool/cyrus -ingroup mail --system --shell /bin/sh cyrus | tee -a $logfile
    mkdir -p /var/spool/cyrus
    chown cyrus:mail /var/spool/cyrus

    # check tasks
    for i in common server; do
      if [ ! -s "/usr/share/linuxmuster/tasks/$i" ]; then
        echo "Error: Taskfile $i not found!" | tee -a $logfile
        exit 1
      fi
    done

    # force apt to do ugly things during upgrade
    echo 'DPkg::Options {"--force-confold";"--force-confdef";"--force-bad-verify";"--force-overwrite";};' > /etc/apt/apt.conf.d/99upgrade
    echo 'aptitude::CmdLine::Ignore-Trust-Violations "true";' >> /etc/apt/apt.conf.d/99upgrade

    # tweaking buggy sophomorix, install postgresql & libdigest-sha-perl first
    aptitude update | tee -a $logfile
    for i in postgresql-9.1 libdigest-sha-perl; do
     DEBIAN_FRONTEND=noninteractive aptitude -y install $i | tee -a $logfile
    done
    [ -s /usr/lib/perl5/Digest/SHA.pm ] && ln -sf SHA.pm /usr/lib/perl5/Digest/SHA1.pm | tee -a $logfile

    # installing depending task
    for i in common server; do
      task=`cat /usr/share/linuxmuster/tasks/$i`
      DEBIAN_FRONTEND=noninteractive aptitude -y install $task | tee -a $logfile
    done

    # remove upgrade cheat
    rm -f /etc/apt/apt.conf.d/99upgrade
    rm -f /var/cache/apt/archives/Packages

    ;;

  --modify)

    # disabled
    exit 0

    # check for installed flag
    if [ ! -e "$INSTALLED" ]; then
      echo "Linux-Musterloesung isn't installed yet!" | tee -a $logfile
      echo "You have to use the command linuxmuster-setup --first!" | tee -a $logfile
      exit 1
    fi

    [ -e $OLDVALUES ] && rm $OLDVALUES

	# fetch external network configuration from ipcop
	if ping -c 2 $ipcopip &> /dev/null; then
		echo "Reading IPCop's external network configuration ..." | tee -a $logfile
		tmpdir=/var/tmp/ipcop.$$
		mkdir -p $tmpdir
		get_ipcop /var/ipcop/ethernet/settings $tmpdir/settings
		. $tmpdir/settings
		tolower $RED_TYPE
		RED_TYPE=$RET
		RET=`echo set linuxmuster-base/externtype "$RED_TYPE" | debconf-communicate`
		RET=`echo set linuxmuster-base/dsluser "" | debconf-communicate`
		RET=`echo set linuxmuster-base/dslpasswd "" | debconf-communicate`
		if [ "$RED_TYPE" = "static" ]; then
			RET=`echo set linuxmuster-base/externip "$RED_ADDRESS" | debconf-communicate`
			RET=`echo set linuxmuster-base/externmask "$RED_NETMASK" | debconf-communicate`
			RET=`echo set linuxmuster-base/gatewayip "$DEFAULT_GATEWAY" | debconf-communicate`
			dnsforwarders="$DNS1 $DNS2"
			strip_spaces $dnsforwarders
			dnsforwarders="$RET"
			RET=`echo set linuxmuster-base/dnsforwarders "$dnsforwarders" | debconf-communicate`
		else
			RET=`echo set linuxmuster-base/externip "" | debconf-communicate`
			RET=`echo set linuxmuster-base/externmask "" | debconf-communicate`
			RET=`echo set linuxmuster-base/gatewayip "" | debconf-communicate`
			RET=`echo set linuxmuster-base/dnsforwarders "" | debconf-communicate`
			if [ "$RED_TYPE" = "pppoe" ]; then
				get_ipcop /var/ipcop/ppp/settings $tmpdir/settings
				. $tmpdir/settings
				RET=`echo set linuxmuster-base/dsluser "$USERNAME" | debconf-communicate`
				RET=`echo set linuxmuster-base/dslpasswd "$PASSWORD" | debconf-communicate`
			fi
		fi
		rm -rf $tmpdir

	else

		echo "Cannot connect to IPCop!" | tee -a $logfile
		exit 1

	fi

    # reading current debconf values
    echo "Reading current configuration values ..." | tee -a $logfile
    for i in country state location workgroup servername domainname schoolname dsluser dslpasswd smtprelay \
             internsubrange fwconfig externtype externip externmask gatewayip dnsforwarders imaging \
             serverexternname; do
      RET=`echo get linuxmuster-base/$i | debconf-communicate`
      RET=${RET#[0-9] }
      oldvalue="${i}_old"
      echo "$oldvalue=\"$RET\"" >> $OLDVALUES
      unset RET

    done

    chmod 600 $OLDVALUES

    ;;

  *)

    usage

    ;;

esac

# backup debconf db
backup_file /var/cache/debconf/config.dat | tee -a $logfile
backup_file /var/cache/debconf/passwords.dat | tee -a $logfile
chmod 600 $BACKUPDIR/var/cache/debconf/passwords.dat-$DATETIME.gz

# ask questions
$SCRIPTSDIR/linuxmuster-config $opt
status=$?

# check status
if [ "$status" != "0" ]; then
	# restore debconf db if setup has been canceled
	gunzip -c $BACKUPDIR/var/cache/debconf/config.dat-$DATETIME.gz > /var/cache/debconf/config.dat
	gunzip -c $BACKUPDIR/var/cache/debconf/passwords.dat-$DATETIME.gz > /var/cache/debconf/passwords.dat
	chmod 600 /var/cache/debconf/passwords.dat
	rm $BACKUPDIR/var/cache/debconf/config.dat-$DATETIME.gz
	rm $BACKUPDIR/var/cache/debconf/passwords.dat-$DATETIME.gz
	exit 1
fi


# call configuration patch script
$SCRIPTSDIR/linuxmuster-patch $opt

chmod 600 $logfile

